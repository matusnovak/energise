{{- if .Values.traefik.server.dashboard.enabled }}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
{{ include "metadata-spec" (dict 
  "Values" .Values
  "Release" .Release
  "Chart" .Chart
  "component" "server") }}
spec:
  entryPoints:
{{- if .Values.traefik.server.http.enabled }}
    - web
{{- end }}
{{- if .Values.traefik.server.https.enabled }}
    - websecure
{{- end }}
  routes:
    - match: Host(`{{ .Values.traefik.server.subdomain }}.{{ .Values.global.domain }}`)
      kind: Rule
      services:
       - name: api@internal
         kind: TraefikService
{{- if .Values.traefik.server.auth.enabled }}
      middlewares:
        - name: "{{ .Chart.Name }}-server-auth"
          namespace: "{{ .Release.Namespace }}"
{{- end }}
{{- if .Values.traefik.server.https.enabled }}
  tls:
{{- if eq .Values.traefik.server.certs.type "resolver" }}
    certResolver: resolver
{{- else }}
    { }
{{- end }}
{{- end }}
{{- end }}

{{- if and (.Values.traefik.server.https.enabled) (.Values.traefik.server.http.redirect) }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
{{ include "metadata-spec" (dict 
  "Values" .Values
  "Release" .Release
  "Chart" .Chart
  "component" "server"
  "suffix" "-http-noop") }}
spec:
  entryPoints:
    - web
  routes:
    - match: "HostRegexp(`{host:.+}`)"
      priority: 99
      kind: Rule
      services:
        - name: noop@internal
          kind: TraefikService
      middlewares:
        - name: "{{ .Chart.Name }}-server-http-redirect"
          namespace: "{{ .Release.Namespace }}"
{{- end }}
