{{- include "configmap-spec" (dict 
  "Values" .Values
  "Release" .Release
  "Chart" .Chart
  "component" "server") }}
data:
  "traefik.yml": |
    entryPoints:
      traefik:
        address: ":{{ .Values.server.port }}"
    {{- if .Values.server.http.enabled }}
      web:
        address: ":{{ .Values.server.http.port}}"
    {{- end }}
    {{- if  .Values.server.https.enabled }}
      websecure:
        address: ":{{ .Values.server.https.port}}"
    {{- end }}
    {{- if  .Values.server.accessLog.enabled }}
    accessLog: {}
    {{- end }}
    log:
      level: {{ .Values.server.log.level }}
    ping:
      entryPoint: traefik
    {{- if  .Values.server.dashboard.enabled }}
    api:
      dashboard: true
      insecure: true
    {{ end }}
    providers:
      kubernetesCRD:
        namespaces:
          - "{{ .Release.Namespace }}"
        allowCrossNamespace: false
    {{- if .Values.server.https.enabled }}
    {{- if eq .Values.server.certs.type "self-signed" }}
    tls:
      stores:
        default: {}
    {{- if and (.Values.server.certs.certFile) (.Values.server.certs.keyFile) }}
      certificates:
        - certFile: "/certs/{{ .Values.global.domain }}.cert"
          keyFile: "/certs/{{ .Values.global.domain }}.key"
          stores:
            - default
    {{- end }}
      domains:
        - main: "{{ .Values.global.domain }}"
          sans:
            - "*.{{ .Values.global.domain }}"
    {{- end }}
    {{- if eq .Values.server.certs.type "resolver" }}
    tls:
      stores:
        default: {}
      domains:
        - main: "{{ .Values.global.domain }}"
          sans:
            - "*.{{ .Values.global.domain }}"
      certresolver: "resolver"
    certificatesResolvers:
      resolver:
        acme:
          email: "{{ .Values.server.certs.email }}"
          storage: "/acme/acme.json"
          caServer: "{{ .Values.server.certs.server }}"
          certificatesDuration: {{ .Values.server.certs.duration }}
    {{- if eq .Values.server.certs.challenge "tls" }}
          tlsChallenge: {}
    {{- else if eq .Values.server.certs.challenge "http" }}
          httpChallenge:
            entryPoint: "web"
    {{- else if eq .Values.server.certs.challenge "dns" }}
          dnsChallenge:
            provider: "{{ .Values.server.certs.dnsProvider }}"
            resolvers:
              {{ toYaml .Values.server.certs.dnsResolvers | nindent 14 }}
    {{- end }}
    {{- end }}
    {{- end }}
    {{- if .Values.server.metrics.enabled }}
    metrics:
      prometheus:
        entryPoint: "traefik"
    {{- end }}
