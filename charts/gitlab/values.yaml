gitlab:
  redis:
    # Docker image for the redis cache.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/library/redis"

      # Image tag.
      # type: string
      tag: "7"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Automatic update policy with Keel
    keel:
      enabled: true
      policy: "minor"
      matchTag: false

    # Password for connecting to the redis.
    # type: string
    password: "Password1!"

    # The user ID to run with.
    # type: integer
    uid: "1000"

    # The group ID to run with.
    # type: integer
    gid: "1000"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # Service related variables
    service:
      # The kubernetes service type.
      # type: string
      type: "ClusterIP"

      # Additional annotations to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}
    
    # Pod related variables
    pod:
      # Additional annotations to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  smtp:
    # Docker image for the SMTP relay.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/namshi/smtp"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Automatic update policy with Keel
    keel:
      enabled: true
      policy: "force"
      matchTag: false

    # The user ID to run with.
    # type: integer
    uid: "0"

    # The group ID to run with.
    # type: integer
    gid: "0"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # Service related variables
    service:
      # The kubernetes service type.
      # type: string
      type: "ClusterIP"

      # Additional annotations to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}
    
    # Pod related variables
    pod:
      # Additional annotations to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  storage:
    # Docker image for the MinIO S3 storage.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/minio/minio"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Automatic update policy with Keel
    keel:
      enabled: true
      policy: "force"
      matchTag: false

    # The user ID to run with.
    # type: integer
    uid: "1000"

    # The group ID to run with.
    # type: integer
    gid: "1000"

    # Access key, any random string
    # type: string
    accessKey: "someAccessKey"

    # Secret key, any random string
    # type: string
    secretKey: "Password1!"
    
    # Buckets options
    buckets:
      # Name of the bucket to use for the registry
      # type: string
      registry: "gitlab-registry-storage"

      # Name of the bucket to use for the pages
      # type: string
      pages: "gitlab-pages-storage"

      # Name of the bucket to use for the terraform
      # type: string
      terraform: "gitlab-terraform-storage"

      # Name of the bucket to use for the dependency
      # type: string
      dependency: "gitlab-dependency-storage"

      # Name of the bucket to use for the diffs
      # type: string
      diffs: "gitlab-diffs-storage"

      # Name of the bucket to use for the lfs
      # type: string
      lfs: "gitlab-lfs-storage"

      # Name of the bucket to use for the artifacts
      # type: string
      artifacts: "gitlab-artifacts-storage"

      # Name of the bucket to use for the uploads
      # type: string
      uploads: "gitlab-uploads-storage"

      # Name of the bucket to use for the packages
      # type: string
      packages: "gitlab-packages-storage"

      # Name of the bucket to use for the backup
      # type: string
      backup: "gitlab-backup-storage"

    # Storage options.
    storage:
      data:
        # Capacity to request.
        # type: string
        capacity: "10Gi"

        # Storage subdirectory
        # type: string
        dir: "gitlab/storage"

        mode: "700"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # Service related variables
    service:
      # The kubernetes service type.
      # type: string
      type: "ClusterIP"

      # Additional annotations to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}
    
    # Pod related variables
    pod:
      # Additional annotations to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  cache:
    # Docker image for the MinIO S3 cache.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/minio/minio"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Automatic update policy with Keel
    keel:
      enabled: true
      policy: "force"
      matchTag: false

    # The user ID to run with.
    # type: integer
    uid: "1000"

    # The group ID to run with.
    # type: integer
    gid: "1000"

    # Access key, any random string
    # type: string
    accessKey: "someAccessKey"

    # Secret key, any random string
    # type: string
    secretKey: "Password1!"
    
    # Buckets options
    bucket:
      # Name of the bucket to use for the runner cache
      # type: string
      name: "gitlab-runner-cache"

    # Storage options.
    storage:
      data:
        # Capacity to request.
        # type: string
        capacity: "10Gi"

        # Storage subdirectory
        # type: string
        dir: "gitlab/cache"

        mode: "700"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # Service related variables
    service:
      # The kubernetes service type.
      # type: string
      type: "ClusterIP"

      # Additional annotations to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}
    
    # Pod related variables
    pod:
      # Additional annotations to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  krokimermaid:
    # Docker image for the SMTP relay.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/yuzutech/kroki-mermaid"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Automatic update policy with Keel
    keel:
      enabled: true
      policy: "force"
      matchTag: false

    # The user ID to run with.
    # type: integer
    uid: "1000"

    # The group ID to run with.
    # type: integer
    gid: "1000"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # Service related variables
    service:
      # The kubernetes service type.
      # type: string
      type: "ClusterIP"

      # Additional annotations to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}
    
    # Pod related variables
    pod:
      # Additional annotations to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  krokibpmn:
    # Docker image for the SMTP relay.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/yuzutech/kroki-bpmn"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Automatic update policy with Keel
    keel:
      enabled: true
      policy: "force"
      matchTag: false

    # The user ID to run with.
    # type: integer
    uid: "1000"

    # The group ID to run with.
    # type: integer
    gid: "1000"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # Service related variables
    service:
      # The kubernetes service type.
      # type: string
      type: "ClusterIP"

      # Additional annotations to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}
    
    # Pod related variables
    pod:
      # Additional annotations to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  krokiexcalidraw:
    # Docker image for the SMTP relay.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/yuzutech/kroki-excalidraw"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Automatic update policy with Keel
    keel:
      enabled: true
      policy: "force"
      matchTag: false

    # The user ID to run with.
    # type: integer
    uid: "1000"

    # The group ID to run with.
    # type: integer
    gid: "1000"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # Service related variables
    service:
      # The kubernetes service type.
      # type: string
      type: "ClusterIP"

      # Additional annotations to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}
    
    # Pod related variables
    pod:
      # Additional annotations to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  krokiblockdiag:
    # Docker image for the SMTP relay.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/yuzutech/kroki-blockdiag"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Automatic update policy with Keel
    keel:
      enabled: true
      policy: "force"
      matchTag: false

    # The user ID to run with.
    # type: integer
    uid: "1000"

    # The group ID to run with.
    # type: integer
    gid: "1000"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # Service related variables
    service:
      # The kubernetes service type.
      # type: string
      type: "ClusterIP"

      # Additional annotations to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}
    
    # Pod related variables
    pod:
      # Additional annotations to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  kroki:
    # Docker image for the SMTP relay.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/yuzutech/kroki"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Automatic update policy with Keel
    keel:
      enabled: true
      policy: "force"
      matchTag: false

    # Subdomain at which to host the web GUI.
    # type: string
    subdomain: "kroki"

    # The user ID to run with.
    # type: integer
    uid: "1000"

    # The group ID to run with.
    # type: integer
    gid: "1000"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # Service related variables
    service:
      # The kubernetes service type.
      # type: string
      type: "ClusterIP"

      # Additional annotations to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}
    
    # Pod related variables
    pod:
      # Additional annotations to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~
