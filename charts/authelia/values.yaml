authelia:
  server:
    # Docker image for the Authelia server.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/authelia/authelia"

      # Image tag.
      # type: string
      tag: "4.36"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Subdomain at which to host the web GUI.
    # type: string
    subdomain: "auth"

    # Database options.
    database:
      # Name of the database. The database will be created if it does not exist.
      # type: string
      name: "authelia"

      # Role for the database. The role will be created if it does not exist.
      # type: string
      role: "authelia"

      # Role password for the database.
      # type: string
      password: "Password1!"

    # The JWT secret key for user login.
    # type: string
    jwtSecret: 'Password1!'

    # The encryption key used to encrypt data in the database. Must be 20 chars or longer.
    # type: string
    encryptionKey: 'Password1!Password1!'

    # Logging options.
    log:
      # Log level.
      # type: string
      level: "info"

    # The user ID to run with.
    # type: integer
    uid: "1000"

    # The group ID to run with.
    # type: integer
    gid: "1000"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # Service related variables
    service:
      # The kubernetes service type.
      # type: string
      type: "ClusterIP"

      # Additional annotations to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}
    
    # Pod related variables
    pod:
      # Additional annotations to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~
  redis:
    # Docker image for the redis cache.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/library/redis"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Password for connecting to the redis.
    # type: string
    password: "Password1!"

    # The user ID to run with.
    # type: integer
    uid: "1000"

    # The group ID to run with.
    # type: integer
    gid: "1000"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # Service related variables
    service:
      # The kubernetes service type.
      # type: string
      type: "ClusterIP"

      # Additional annotations to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}
    
    # Pod related variables
    pod:
      # Additional annotations to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  smtp:
    # Docker image for the redis cache.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/namshi/smtp"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # The user ID to run with.
    # type: integer
    uid: "0"

    # The group ID to run with.
    # type: integer
    gid: "0"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # Service related variables
    service:
      # The kubernetes service type.
      # type: string
      type: "ClusterIP"

      # Additional annotations to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the service.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}
    
    # Pod related variables
    pod:
      # Additional annotations to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      annotations: {}

      # Additional labels to add to the pod.
      # type: map
      # example: { "example.com/hello": "world" }
      labels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~
