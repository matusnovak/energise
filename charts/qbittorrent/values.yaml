server:
  # Docker image for the filebrowser server.
  image:
    # Image name without the tag.
    # type: string
    name: "docker.io/markusmcnugen/qbittorrentvpn"

    # Image tag.
    # type: string
    tag: "latest"

    # Image pull policy.
    # type: string
    pullPolicy: "IfNotPresent"

  # Automatic update policy with Keel
  keel:
    enabled: true
    policy: "force"
    matchTag: false

  # Subdomain at which to host the web GUI.
  # Leave empty for no subdomain
  # type: string
  subdomain: "qbittorrent"

  # The user ID to run with.
  # type: integer
  uid: "1000"

  # The group ID to run with.
  # type: integer
  gid: "1000"

  # Authentication options.
  auth:
    # Use Authelia authentication for the web GUI? This will utilize LDAP.
    # type: boolean
    enabled: true

    # LDAP group that the user must belong to.
    # This group will be created automatically if it does not exist.
    # type: string
    group: "qbittorrent"

  # VPN settings
  vpn:
    enabled: false
    username: "example"
    password: "example"
    conf: ""

  # Storage options.
  storage:
    config:
      # Capacity to request.
      # type: string
      capacity: "100Mi"

      # Storage subdirectory
      # type: string
      dir: "qbittorrent/server/config"

    downloads:
      # Capacity to request.
      # type: string
      capacity: "100Gi"

      # Storage subdirectory
      # type: string
      dir: "qbittorrent/server/downloads"

  # Additional environment variables for the pod.
  # type: map
  # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
  env: []

  # Service related variables
  service:
    # The kubernetes service type.
    # type: string
    type: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    annotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    labels: {}
  
  # Pod related variables
  pod:
    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    annotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    labels: {}

  # Specify which node or nodes can be used to host this pod.
  # Leave as an empty map to allow the pod to be spawned anywhere.
  # type: map
  # example: { "kubernetes.io/arch": "amd64" }
  nodeSelector: {}

  # Optionally specify how much of each resource the pod will need.
  resources:
    # Maximum limits that the pod can not exceed.
    # Set to ~ or null to disable the resource limits.
    limits:
      # Maximum CPU that the pod can not exceed.
      # type: string
      # example: "1000m"
      cpu: ~
      # Maximum RAM that the pod can not exceed.
      # type: string
      # example: "1024Mi"
      memory: ~
    # Requested limits for scheduling the pod on nodes.
    # Set to ~ or null to disable the resource requests.
    requests:
      # The requested amount of CPU
      # type: string
      # example: "500m"
      cpu: ~
      # The requested amount of CPU
      # type: string
      # example: "512Mi"
      memory: ~
