- name: "Check if config file {{ include_vars_path }} exists"
  stat:
    path: "{{ include_vars_path }}"
  register: config_stat_result

- name: "Load config file "
  ansible.builtin.include_vars:
    file: "{{ include_vars_path }}"
    hash_behaviour: merge
  when: config_stat_result.stat.exists

- name: "No config found"
  fail:
    msg: "No such file: {{ include_vars_path }}"
  when: not config_stat_result.stat.exists and not (ignore_config_error | default(false))

- name: "Find kubernetes nodes"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Node
    label_selectors:
      - "node-role.kubernetes.io/master=true"
  register: nodes

- name: "Master kubernetes node check"
  fail:
    msg: "No master kubernetes node found!"
  when: (nodes.resources | length) == 0

- name: "Set common facts"
  set_fact:
    master_node: "{{ nodes.resources[0] }}"
    master_node_ip: "{{ nodes.resources[0].metadata.annotations['k3s.io/internal-ip'] }}"
    storage_options_template: "{{ playbook_dir }}/roles/k8s/templates/storage_spec.yml.j2"

- name: "Create namespace - {{ common.namespace }}"
  kubernetes.core.k8s:
    name: "{{ common.namespace }}"
    api_version: v1
    kind: Namespace
    state: present

- name: "Prepare root storage"
  file:
    path: "{{ common.storage.path }}"
    state: directory
    mode: "0755"
  become: yes
  when: common.storage.type == 'host'
