apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ openldap.server.name }}"
  namespace: "{{ common.namespace }}"
  labels:
    {{ service.extraLabels | to_nice_yaml | indent(4) }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      {{ service.selector | to_nice_yaml | indent(6) }}
  template:
    metadata:
{% if openldap.server.podAnnotations %}
      annotations:
        {{ openldap.server.podAnnotations | to_nice_yaml | indent(8) }}
{% endif %}
      labels:
        {{ service.selector | to_nice_yaml | indent(8) }}
{% if openldap.server.podLabels %}
        {{ openldap.server.podLabels | to_nice_yaml | indent(8) }}
{% endif %}
    spec:
      serviceAccountName: "{{ openldap.server.name }}"
      securityContext:
        allowPrivilegeEscalation: false
        runAsUser: 0
        fsGroup: 911
      containers:
        - name: "server"
          image: "{{ openldap.server.image.name }}:{{ openldap.server.image.tag }}"
          imagePullPolicy: "{{ openldap.server.image.pullPolicy }}"
          args:
            - "--loglevel"
            - "debug"
          env:
            - name: LDAP_ORGANISATION
              value: "{{ openldap.server.organisation }}"
            - name: LDAP_BASE_DN
              value: "{{ common.domainComponent }}"
            - name: LDAP_DOMAIN
              value: "{{ common.domain }}"
            - name: LDAP_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ openldap.server.name }}"
                  key: password
                  optional: false
            - name: LDAP_REMOVE_CONFIG_AFTER_SETUP
              value: "false"
            - name: LDAP_TLS
              value: "false"
            - name: LDAP_READONLY_USER
              value: "true"
            - name: LDAP_READONLY_USER_USERNAME
              value: "readonly"
            - name: LDAP_READONLY_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ openldap.server.name }}"
                  key: readonlyPassword
                  optional: false
          ports:
            - name: openldap
              containerPort: 389
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - 'sh'
                - '-c'
                - 'ldapsearch -x -H ldap://127.0.0.1 -b $LDAP_BASE_DN -s sub -D cn=admin,$LDAP_BASE_DN -w $LDAP_ADMIN_PASSWORD'
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 1
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
                - 'sh'
                - '-c'
                - 'ldapsearch -x -H ldap://127.0.0.1 -b $LDAP_BASE_DN -s sub -D cn=admin,$LDAP_BASE_DN -w $LDAP_ADMIN_PASSWORD'
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            {{ openldap.server.resources | to_nice_yaml | indent(12) }}
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: data-volume
              mountPath: "/var/lib/ldap"
              subPath: "data"
            - name: data-volume
              mountPath: "/etc/ldap/slapd.d"
              subPath: "config"
      nodeSelector:
        {{ openldap.server.nodeSelector | to_nice_yaml | indent(8) }}
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: "{{ openldap.server.name }}"
