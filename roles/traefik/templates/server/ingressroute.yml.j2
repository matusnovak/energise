{% if traefik.server.dashboard.enabled %}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: "{{ traefik.server.name }}"
  namespace: "{{ common.namespace }}"
  labels:
    {{ service.extraLabels | to_nice_yaml | indent(4) }}
spec:
  entryPoints:
{% if traefik.server.http.enabled %}
    - web
{% endif %}
{% if traefik.server.https.enabled %}
    - websecure
{% endif %}
  routes:
    - match: Host(`{{ traefik.server.subdomain }}.{{ common.domain }}`)
      kind: Rule
      services:
       - name: api@internal
         kind: TraefikService
{% if traefik.server.auth.enabled %}
      middlewares:
        - name: "{{ traefik.server.name }}-auth"
          namespace: "{{ common.namespace }}"
{% endif %}
{% if traefik.server.https.enabled %}
  tls:
{% if traefik.server.certs.type == 'resolver' %}
    certResolver: resolver
{% else %}
    { }
{% endif %}
{% endif %}
{% endif %}

{% if traefik.server.https.enabled and traefik.server.http.redirect %}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: "{{ traefik.server.name }}-http-noop"
  namespace: "{{ common.namespace }}"
  labels:
    {{ service.extraLabels | to_nice_yaml | indent(4) }}
spec:
  entryPoints:
    - web
  routes:
    - match: "HostRegexp(`{host:.+}`)"
      priority: 99
      kind: Rule
      services:
        - name: noop@internal
          kind: TraefikService
      middlewares:
        - name: "{{ traefik.server.name }}-http-redirect"
          namespace: "{{ common.namespace }}"
{% endif %}
