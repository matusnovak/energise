---
matrix:
  # Enable Matrix app?
  # type: boolean
  enabled: false

  synapse:
    # Name of the component.
    # type: string
    name: "matrix-synapse"

    # Docker image for the synapse server.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/matrixdotorg/synapse"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"  

    subdomain: "matrix"

    # Database options.
    database:
      # Name of the database. The database will be created if it does not exist.
      # type: string
      name: "synapse"

      # Role for the database. The role will be created if it does not exist.
      # type: string
      role: "synapse"

      # Role password for the database.
      # type: string
      password: "Password1!"

    # Authentication options.
    auth:
      # LDAP group that the user must belong to.
      # This group will be created automatically if it does not exist.
      # type: string
      group: "matrix"

    # Storage options.
    storage:
      # Capacity to request.
      # type: string
      capacity: "100Gi"

      # Storage subdirectory
      # type: string
      dir: "matrix/synapse"

    # Allow user registration?
    # You probably don't want this set to true if you are using LDAP.
    # Users will not be created into LDAP, this is only for Synapse's internal user management.
    registration:
      enabled: false

    # Test based search
    search:
      enabled: true

    # Url preview for links
    urlPreview:
      enabled: true

      # Max link preview size
      maxSize: '10M'

      # Which IPs are not allowed for URL preview?
      blacklist:
        - '127.0.0.0/8'
        - '10.0.0.0/8'
        - '172.16.0.0/12'
        - '192.168.0.0/16'
        - '100.64.0.0/10'
        - '192.0.0.0/24'
        - '169.254.0.0/16'
        - '192.88.99.0/24'
        - '198.18.0.0/15'
        - '192.0.2.0/24'
        - '198.51.100.0/24'
        - '203.0.113.0/24'
        - '224.0.0.0/4'
        - '::1/128'
        - 'fe80::/10'
        - 'fc00::/7'
        - '2001:db8::/32'
        - 'ff00::/8'
        - 'fec0::/10'

    trustedKeyServers:
      - server_name: "matrix.org"

    # Performance metrics
    metrics:
      enabled: true

    # List of workers
    workers:
      homeserver:
        enabled: true # Must be always enabled!
        app: synapse.app.homeserver
        listeners: [metrics, client, federation]
        paths:
          - '/_synapse'
          - '/_matrix'

      generic_worker:
        enabled: true
        app: synapse.app.generic_worker
        listeners: [metrics, client, federation]
        paths:
          - '^/_matrix/federation/v1/event/'
          - '^/_matrix/federation/v1/state/'
          - '^/_matrix/federation/v1/state_ids/'
          - '^/_matrix/federation/v1/backfill/'
          - '^/_matrix/federation/v1/get_missing_events/'
          - '^/_matrix/federation/v1/publicRooms'
          - '^/_matrix/federation/v1/query/'
          - '^/_matrix/federation/v1/make_join/'
          - '^/_matrix/federation/v1/make_leave/'
          - '^/_matrix/federation/v1/send_join/'
          - '^/_matrix/federation/v2/send_join/'
          - '^/_matrix/federation/v1/send_leave/'
          - '^/_matrix/federation/v2/send_leave/'
          - '^/_matrix/federation/v1/invite/'
          - '^/_matrix/federation/v2/invite/'
          - '^/_matrix/federation/v1/query_auth/'
          - '^/_matrix/federation/v1/event_auth/'
          - '^/_matrix/federation/v1/exchange_third_party_invite/'
          - '^/_matrix/federation/v1/user/devices/'
          - '^/_matrix/federation/v1/get_groups_publicised$'
          - '^/_matrix/key/v2/query'
          - '^/_matrix/federation/unstable/org.matrix.msc2946/spaces/'
          - '^/_matrix/federation/unstable/org.matrix.msc2946/hierarchy/'
          - '^/_matrix/federation/v1/send/'
          - '^/_matrix/client/(api/v1|r0|unstable)/createRoom$'
          - '^/_matrix/client/(api/v1|r0|unstable)/publicRooms$'
          - '^/_matrix/client/(api/v1|r0|unstable)/rooms/.*/joined_members$'
          - '^/_matrix/client/(api/v1|r0|unstable)/rooms/.*/context/.*$'
          - '^/_matrix/client/(api/v1|r0|unstable)/rooms/.*/members$'
          - '^/_matrix/client/(api/v1|r0|unstable)/rooms/.*/state$'
          - '^/_matrix/client/unstable/org.matrix.msc2946/rooms/.*/spaces$'
          - '^/_matrix/client/unstable/org.matrix.msc2946/rooms/.*/hierarchy$'
          - '^/_matrix/client/unstable/im.nheko.summary/rooms/.*/summary$'
          - '^/_matrix/client/(api/v1|r0|unstable)/account/3pid$'
          - '^/_matrix/client/(api/v1|r0|unstable)/devices$'
          - '^/_matrix/client/(api/v1|r0|unstable)/keys/query$'
          - '^/_matrix/client/(api/v1|r0|unstable)/keys/changes$'
          - '^/_matrix/client/versions$'
          - '^/_matrix/client/(api/v1|r0|unstable)/voip/turnServer$'
          - '^/_matrix/client/(api/v1|r0|unstable)/joined_groups$'
          - '^/_matrix/client/(api/v1|r0|unstable)/publicised_groups$'
          - '^/_matrix/client/(api/v1|r0|unstable)/publicised_groups/'
          - '^/_matrix/client/(api/v1|r0|unstable)/rooms/.*/event/'
          - '^/_matrix/client/(api/v1|r0|unstable)/joined_rooms$'
          - '^/_matrix/client/(api/v1|r0|unstable)/search$'
          - '^/_matrix/client/(api/v1|r0|unstable)/login$'
          - '^/_matrix/client/(r0|unstable)/register$'
          - '^/_matrix/client/unstable/org.matrix.msc3231/register/org.matrix.msc3231.login.registration_token/validity$'
          - '^/_matrix/client/(api/v1|r0|unstable)/rooms/.*/redact'
          - '^/_matrix/client/(api/v1|r0|unstable)/rooms/.*/send'
          - '^/_matrix/client/(api/v1|r0|unstable)/rooms/.*/state/'
          - '^/_matrix/client/(api/v1|r0|unstable)/rooms/.*/(join|invite|leave|ban|unban|kick)$'
          - '^/_matrix/client/(api/v1|r0|unstable)/join/'
          - '^/_matrix/client/(api/v1|r0|unstable)/profile/'

      federation_reader:
        enabled: true
        app: synapse.app.federation_reader
        listeners: [metrics, federation]
        paths:
          - '/_matrix/federation/v1/send/'

      synchrotron:
        enabled: true
        app: synapse.app.generic_worker
        listeners: [metrics, client]
        paths:
          - '^/_matrix/client/(v2_alpha|r0)/sync$'
          - '^/_matrix/client/(api/v1|v2_alpha|r0)/events$'
          - '^/_matrix/client/(api/v1|r0)/initialSync$'
          - '^/_matrix/client/(api/v1|r0)/rooms/[^/]+/initialSync$'

      pusher:
        enabled: true
        app: synapse.app.pusher
        listeners: [metrics]

      appservice:
        enabled: true
        app: synapse.app.appservice
        listeners: [metrics]

      federation_sender:
        enabled: true
        app: synapse.app.federation_sender
        listeners: [metrics]

      media_repository:
        enabled: true
        app: synapse.app.media_repository
        listeners: [metrics, media]
        paths:
          - "/_matrix/media/"
          - "/_synapse/admin/v1/purge_media_cache"
          - "/_synapse/admin/v1/room/.*/media.*"
          - "/_synapse/admin/v1/user/.*/media.*"
          - "/_synapse/admin/v1/media/.*"
          - "/_synapse/admin/v1/quarantine_media/.*"

      user_dir:
        enabled: true
        app: synapse.app.user_dir
        listeners: [metrics, client]
        paths:
          - "/_matrix/client/(api/v1|r0|unstable)/user_directory/search"

      frontend_proxy:
        enabled: true
        app: synapse.app.frontend_proxy
        listeners: [metrics, client]
        paths:
          - "/_matrix/client/(api/v1|r0|unstable)/keys/upload"
          - "/_matrix/client/(api/v1|r0|unstable)/presence/[^/]+/status"

    # Whether or not to report anonymized homeserver usage statistics.
    reportStats:
      enabled: false

    # Synapse secrets
    secrets:
      # Signing key that must be generated via the following command:
      # docker run --rm -v /tmp:/data -e SYNAPSE_SERVER_NAME=${DOMAIN} -e SYNAPSE_REPORT_STATS=no docker.io/matrixdotorg/synapse:latest generate > /dev/null &&
      # cat /tmp/${DOMAIN}.signing.key
      # type: string
      signingkey: null

      # Registration shared secret for Matrix - Synapse
      # Must be a strong random string with length of 50 characters
      # Don't use the one from this sample! Generate your own!
      # type: string
      registration: '5vpdd8kFjX3wntKBgNzHzecj34QqeytAavdwxduAXwwu2quMhE'

      # Macaroon shared secret for Matrix - Synapse
      # Must be a strong random string with length of 50 characters
      # Don't use the one from this sample! Generate your own!
      # type: string
      macaroon: 'csRC6eFY5JT5BbKLsLsupFtb79nzwFrKeHEHcN5ULyHE8ZDbTv'

      # Form secret for Matrix - Synapse
      # Must be a strong random string with length of 50 characters
      # Don't use the one from this sample! Generate your own!
      # type: string
      form: 'cJstDuMJJnXsQP2yQFXLNTjmtDLRceZ8e8MdHuX7gmWzRfahp2'

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}

    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  redis:
    # Name of the component.
    # type: string
    name: "matrix-redis"

    # Docker image for the redis cache.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/library/redis"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Password for connecting to the redis.
    # type: string
    password: "Password1!"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}

    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~
  
  nginx:
    # Name of the component.
    # type: string
    name: "matrix-nginx"

    # Docker image for the nginx.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/library/nginx"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}

    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  element:
    # Name of the component.
    # type: string
    name: "matrix-element"

    # Docker image for the nginx.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/vectorim/element-web"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Subdomain at which to serve the Matrix Element web GUI
    # type: string
    subdomain: "element"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}

    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~
