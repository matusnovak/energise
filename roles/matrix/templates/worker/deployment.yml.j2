apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ matrix.synapse.name }}-{{ worker.type | replace('_', '-') }}"
  namespace: "{{ common.namespace }}"
  labels:
    {{ service.extraLabels | to_nice_yaml | indent(4) }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      {{ service.selector | to_nice_yaml | indent(6) }}
  template:
    metadata:
      annotations:
        checksum/config: "{{ lookup('ansible.builtin.vars', 'worker_' + worker.type + '_yaml') | hash('md5') }}"
{% if matrix.synapse.podAnnotations %}
        {{ matrix.synapse.podAnnotations | to_nice_yaml | indent(8) }}
{% endif %}
      labels:
        {{ service.selector | to_nice_yaml | indent(8) }}
{% if matrix.synapse.podLabels %}
        {{ matrix.synapse.podLabels | to_nice_yaml | indent(8) }}
{% endif %}
    spec:
      serviceAccountName: "{{ matrix.synapse.name }}"
      enableServiceLinks: false
      securityContext:
        allowPrivilegeEscalation: false
{% if openldap.server.pullSecret is defined %}
      imagePullSecrets:
        - name: "{{ openldap.server.pullSecret }}"
{% endif %}
      initContainers:
{% if worker.type == 'homeserver' %}
        {{ lookup('template', postgres_container_add_database_path, template_vars=dict(database=matrix.synapse.database)) | indent(8) }}
        {{ lookup('template', openldap_container_add_group_path, template_vars=dict(ldap_group_name=matrix.synapse.auth.group)) | indent(8) }}
{% else %}
        - name: "init-curl"
          image: "{{ common.curl.image.name }}:{{ common.curl.image.tag }}"
          imagePullPolicy: "{{ common.curl.image.pullPolicy }}"
          command:
            - 'sh'
            - '-c'
            - 'until curl -f "http://{{ matrix_synapse_homeserver_url }}:8008/health"; do echo "waiting for homeserver"; sleep 2; done;'
{% endif %}
      containers:
        - name: "server"
          image: "{{ matrix.synapse.image.name }}:{{ matrix.synapse.image.tag }}"
          imagePullPolicy: "{{ matrix.synapse.image.pullPolicy }}"
          command:
            - 'python'
          args:
            - '-m'
            - '{{ worker.config.app }}'
            - '-c'
            - '/config/homeserver.yaml'
{% if worker.type != "homeserver" %}
            - '-c'
            - '/config/{{ worker.type }}.yaml'
{% endif %}
            - '-c'
            - '/config/conf.d/'
          ports:
            - name: synapse
              containerPort: 8008
              protocol: TCP
{% if worker.type == 'homeserver' %}
            - name: replication
              containerPort: 9093
              protocol: TCP
{% endif %}
{% if matrix.synapse.env %}
          env:
            {{ matrix.synapse.env | to_nice_yaml | indent(12) }}
{% endif %}
          livenessProbe:
            httpGet:
              path: /health
              port: synapse
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /health
              port: synapse
            failureThreshold: 1
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            {{ matrix.synapse.resources | to_nice_yaml | indent(12) }}
          volumeMounts:
            - name: "data-volume"
              mountPath: "/data"
            - name: "config-volume"
              mountPath: "/config"
              readonly: true
            - name: "signingkey-volume"
              mountPath: "/secrets"
              readonly: true
            - name: temp-config
              mountPath: /config/conf.d
      nodeSelector:
        {{ matrix.synapse.nodeSelector | to_nice_yaml | indent(8) }}
      volumes:
        - name: config-volume
          configMap:
            name: "{{ matrix.synapse.name }}"
            optional: false
            items:
              - key: "homeserver.log.config"
                path: "homeserver.log.config"
              - key: "homeserver.yaml"
                path: "homeserver.yaml"
{% if worker.type != "homeserver" %}
              - key: "{{ worker.type }}.yaml"
                path: "{{ worker.type }}.yaml"
{% endif %}
        - name: "data-volume"
          persistentVolumeClaim:
            claimName: "{{ matrix.synapse.name }}"
        - name: signingkey-volume
          secret:
            secretName: "{{ matrix.synapse.name }}"
            optional: false
            items:
              - key: "{{ common.domain }}.signing.key"
                path: "{{ common.domain }}.signing.key"
        - name: temp-config
          emptyDir: {}
