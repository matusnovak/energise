apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ matrix.nginx.name }}"
  namespace: "{{ common.namespace }}"
  labels:
    {{ service.extraLabels | to_nice_yaml | indent(4) }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      {{ service.selector | to_nice_yaml | indent(6) }}
  template:
    metadata:
      annotations:
        checksum/config: "{{ matrix_conf | hash('md5') }}"
{% if matrix.nginx.podAnnotations %}
        {{ matrix.nginx.podAnnotations | to_nice_yaml | indent(8) }}
{% endif %}
      labels:
        {{ service.selector | to_nice_yaml | indent(8) }}
{% if matrix.nginx.podLabels %}
        {{ matrix.nginx.podLabels | to_nice_yaml | indent(8) }}
{% endif %}
    spec:
      serviceAccountName: "{{ matrix.nginx.name }}"
      securityContext:
        allowPrivilegeEscalation: false
{% if matrix.nginx.pullSecret is defined %}
      imagePullSecrets:
        - name: "{{ matrix.nginx.pullSecret }}"
{% endif %}
      containers:
        - name: "server"
          image: "{{ matrix.nginx.image.name }}:{{ matrix.nginx.image.tag }}"
          imagePullPolicy: "{{ matrix.nginx.image.pullPolicy }}"
{% if matrix.nginx.env %}
          env:
            {{ matrix.nginx.env | to_nice_yaml | indent(12) }}
{% endif %}
          ports:
            - name: web
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /.well-known/matrix/server
              port: web
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /.well-known/matrix/server
              port: web
            failureThreshold: 1
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            {{ matrix.nginx.resources | to_nice_yaml | indent(12) }}
          volumeMounts:
            - name: "config-volume"
              mountPath: /etc/nginx/conf.d/matrix.conf
              subPath: matrix.conf
              readOnly: true
            - name: "config-volume"
              mountPath: /var/www/.well-known/matrix/server
              subPath: server
              readOnly: true
            - name: "config-volume"
              mountPath: /var/www/.well-known/matrix/client
              subPath: client
              readOnly: true
      nodeSelector:
        {{ matrix.nginx.nodeSelector | to_nice_yaml | indent(8) }}
      volumes:
        - name: "config-volume"
          configMap:
            name: "{{ matrix.nginx.name }}"
            optional: false
            items:
              - key: "matrix.conf"
                path: "matrix.conf"
              - key: "client"
                path: "client"
              - key: "server"
                path: "server"
