apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ qbittorrent.server.name }}"
  namespace: "{{ common.namespace }}"
  labels:
    {{ service.extraLabels | to_nice_yaml | indent(4) }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      {{ service.selector | to_nice_yaml | indent(6) }}
  template:
    metadata:
      annotations:
        checksum/config: "{{ qbittorrent.server.vpn.conf | hash('md5') }}"
{% if qbittorrent.server.podAnnotations %}
        {{ qbittorrent.server.podAnnotations | to_nice_yaml | indent(8) }}
{% endif %}
      labels:
        {{ service.selector | to_nice_yaml | indent(8) }}
{% if qbittorrent.server.podLabels %}
        {{ qbittorrent.server.podLabels | to_nice_yaml | indent(8) }}
{% endif %}
    spec:
      serviceAccountName: "{{ qbittorrent.server.name }}"
      securityContext:
        runAsUser: 0
        runAsGroup: {{ qbittorrent.server.gid }}
        fsGroup: {{ qbittorrent.server.gid }}
        allowPrivilegeEscalation: false
        capabilities:
          add:
            - "NET_ADMIN"
{% if qbittorrent.server.pullSecret is defined %}
      imagePullSecrets:
        - name: "{{ qbittorrent.server.pullSecret }}"
{% endif %}
{% if qbittorrent.server.auth.enabled %}
      initContainers:
        {{ lookup('template', openldap_container_add_group_path, template_vars=dict(ldap_group_name=qbittorrent.server.auth.group)) | indent(8) }}
{% endif %}
      containers:
        - name: "server"
          securityContext:
            capabilities:
              add:
                - "NET_ADMIN"
          image: "{{ qbittorrent.server.image.name }}:{{ qbittorrent.server.image.tag }}"
          imagePullPolicy: "{{ qbittorrent.server.image.pullPolicy }}"
{% if qbittorrent.server.vpn.enabled %}
          command:
            - 'bash'
          args:
            - '-c'
            - |
              mkdir -p /config/openvpn;
              cp /ovpn/vpn.ovpn /config/openvpn/vpn.ovpn;
              cp /etc/resolv-custom.conf /etc/resolv.conf;
              /etc/openvpn/start.sh;
{% endif %}
          env:
            - name: VPN_ENABLED
              value: "{{ 'yes' if qbittorrent.server.vpn.enabled else 'no' }}"
            - name: VPN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ qbittorrent.server.name }}"
                  key: "vpnUsername"
                  optional: false
            - name: VPN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ qbittorrent.server.name }}"
                  key: "vpnPassword"
                  optional: false
            - name: LAN_NETWORK
              value: "0.0.0.0/0"
            - name: NAME_SERVERS
              value: "1.1.1.1,8.8.8.8"
            - name: PUID
              value: "{{ qbittorrent.server.uid }}"
            - name: PGID
              value: "{{ qbittorrent.server.gid }}"
            - name: UMASK
              value: "002"
            - name: WEBUI_PORT_ENV
              value: "8080"
            - name: INCOMING_PORT_ENV
              value: "8999"
{% if qbittorrent.server.env %}
            {{ qbittorrent.server.env | to_nice_yaml | indent(12) }}
{% endif %}
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: web
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: web
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            {{ qbittorrent.server.resources | to_nice_yaml | indent(12) }}
          volumeMounts:
            - name: "tun-device"
              mountPath: /dev/net/tun
              readOnly: true
            - name: "config-volume"
              mountPath: "/config"
            - name: "downloads-volume"
              mountPath: "/downloads"
            - name: "resolv-volume"
              mountPath: "/etc/resolv-custom.conf"
              subPath: "resolv.conf"
              readOnly: true
{% if qbittorrent.server.vpn.enabled %}
            - name: "openvpn-volume"
              mountPath: "/config/openvpn"
            - name: "ovpn-volume"
              mountPath: "/ovpn/vpn.ovpn"
              subPath: "vpn.ovpn"
              readOnly: true
{% endif %}
      nodeSelector:
        {{ qbittorrent.server.nodeSelector | to_nice_yaml | indent(8) }}
      volumes:
        - name: "tun-device"
          hostPath:
            path: /dev/net/tun
        - name: "config-volume"
          persistentVolumeClaim:
            claimName: "{{ qbittorrent.server.name }}-config"
        - name: "downloads-volume"
          persistentVolumeClaim:
            claimName: "{{ qbittorrent.server.name }}-downloads"
{% if qbittorrent.server.vpn.enabled %}
        - name: "openvpn-volume"
          emptyDir: {}
        - name: "ovpn-volume"
          configMap:
            name: "{{ qbittorrent.server.name }}"
            optional: false
            items:
              - key: "vpn.ovpn"
                path: "vpn.ovpn"
{% endif %}
        - name: "resolv-volume"
          configMap:
            name: "{{ qbittorrent.server.name }}"
            optional: false
            items:
              - key: "resolv.conf"
                path: "resolv.conf"
