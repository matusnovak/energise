server:
  host: 0.0.0.0
  port: 9091

jwt_secret: "{{ authelia.server.jwtSecret }}"

log:
  level: "{{ authelia.server.log.level }}"

session:
  name: authelia_session
  secret: "{{ authelia.server.jwtSecret }}"
  expiration: 3600
  inactivity: 300
  domain: "{{ common.domain }}"

  redis:
    host: "{{ authelia_redis_url }}"
    port: 6379
    password: "{{ authelia.redis.password }}"

storage:
  encryption_key: "{{ authelia.server.encryptionKey }}"
  postgres:
    host: "{{ postgres_server_url }}"
    port: 5432
    database: "{{ authelia.server.database.name }}"
    username: "{{ authelia.server.database.role }}"
    password: "{{ authelia.server.database.password }}"
    sslmode: "disable"

regulation:
  max_retries: 3
  find_time: 120
  ban_time: 300

notifier:
  disable_startup_check: false
  filesystem:
    filename: /notification/notification.txt

access_control:
  default_policy: deny

  rules:
{% if traefik is defined %}
    - domain: "{{ traefik.server.subdomain }}.{{ common.domain }}"
      subject: "group:{{ traefik.server.auth.group }}"
      policy: "one_factor"
{% endif %}
{% if adminer is defined %}
    - domain: "{{ adminer.server.subdomain }}.{{ common.domain }}"
      subject: "group:{{ adminer.server.auth.group }}"
      policy: "one_factor"
{% endif %}
{% if filebrowser is defined %}
    - domain: "{{ filebrowser.server.subdomain }}.{{ common.domain }}"
      subject: "group:{{ filebrowser.server.auth.group }}"
      policy: "one_factor"
{% endif %}
{% if photoprism is defined %}
    - domain: "{{ photoprism.server.subdomain }}.{{ common.domain }}"
      subject: "group:{{ photoprism.server.auth.group }}"
      policy: "one_factor"
{% endif %}
authentication_backend:
  password_reset:
    disable: true

  ldap:
    url: "ldap://{{ openldap_server_url }}"
    start_tls: false
    implementation: "custom"
    tls:
      skip_verify: false
    base_dn: {{ common.domainComponent }}
    username_attribute: uid
    additional_users_dn: "{{ openldap_users_ou }}"
    users_filter: "(&({username_attribute}={input})(objectClass=person))"
    additional_groups_dn: "{{ openldap_groups_ou }}"
    groups_filter: "(&(uniqueMember={dn})(objectclass=groupOfUniqueNames))"
    group_name_attribute: "cn"
    mail_attribute: "uid"
    display_name_attribute: "cn"
    user: "{{ openldap_readonly_user_dn }}"
    password: '{{ openldap.server.readonlyPassword }}'
