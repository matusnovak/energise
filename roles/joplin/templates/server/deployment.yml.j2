apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ joplin.server.name }}"
  namespace: "{{ common.namespace }}"
  labels:
    {{ service.extraLabels | to_nice_yaml | indent(4) }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      {{ service.selector | to_nice_yaml | indent(6) }}
  template:
    metadata:
{% if joplin.server.podAnnotations %}
      annotations:
        {{ joplin.server.podAnnotations | to_nice_yaml | indent(8) }}
{% endif %}
      labels:
        {{ service.selector | to_nice_yaml | indent(8) }}
{% if joplin.server.podLabels %}
        {{ joplin.server.podLabels | to_nice_yaml | indent(8) }}
{% endif %}
    spec:
      serviceAccountName: "{{ joplin.server.name }}"
      securityContext:
        allowPrivilegeEscalation: false
{% if joplin.server.pullSecret is defined %}
      imagePullSecrets:
        - name: "{{ joplin.server.pullSecret }}"
{% endif %}
      initContainers:
        {{ lookup('template', postgres_container_add_database_path, template_vars=dict(database=joplin.server.database)) | indent(8) }}
      containers:
        - name: "server"
          image: "{{ joplin.server.image.name }}:{{ joplin.server.image.tag }}"
          imagePullPolicy: "{{ joplin.server.image.pullPolicy }}"
          env:
            - name: "APP_PORT"
              value: "8080"
            - name: "APP_BASE_URL"
              value: "https://{{ joplin.server.subdomain }}.{{ common.domain }}"
            - name: "DB_CLIENT"
              value: "pg"
            - name: "POSTGRES_DATABASE"
              value: "{{ joplin.server.database.name }}"
            - name: "POSTGRES_USER"
              value: "{{ joplin.server.database.role }}"
            - name: "POSTGRES_PORT"
              value: "5432"
            - name: "POSTGRES_HOST"
              value: "{{ postgres_server_url }}"
            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ joplin.server.name }}"
                  key: "databasePassword"
                  optional: false
{% if joplin.server.env %}
            {{ joplin.server.env | to_nice_yaml | indent(12) }}
{% endif %}
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/ping
              port: web
              httpHeaders:
                - name: "Host"
                  value: "{{ joplin.server.subdomain }}.{{ common.domain }}"
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /api/ping
              port: web
              httpHeaders:
                - name: "Host"
                  value: "{{ joplin.server.subdomain }}.{{ common.domain }}"
            failureThreshold: 1
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            {{ joplin.server.resources | to_nice_yaml | indent(12) }}
          securityContext:
            allowPrivilegeEscalation: false
      nodeSelector:
        {{ joplin.server.nodeSelector | to_nice_yaml | indent(8) }}
