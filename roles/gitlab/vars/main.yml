---
gitlab:
  # Enable GitLab application?
  enabled: false

  server:
    # Name of the component.
    # type: string
    name: "gitlab-server"

    # Docker image for the gitlab server.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/gitlab/gitlab-ce"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Subdomain at which to host the web GUI.
    # type: string
    subdomain: "gitlab"

    # Subdomain at which to host the pages web API.
    # type: string
    subdomainPages: "pages"

    # Subdomain at which to host the registry web API.
    # type: string
    subdomainRegistry: "registry"

    # The ssh port for using git. This is for both the internal and external port.
    # type: integer
    sshPort: 2222

    # Database options.
    database:
      # Name of the database. The database will be created if it does not exist.
      # Must be set to "gitlabhq_production" for the gitlab to work properly.
      # type: string
      name: "gitlabhq_production"

      # Role for the database. The role will be created if it does not exist.
      # type: string
      role: "gitlab"

      # Role password for the database.
      # type: string
      password: "Password1!"

      # Add superuser privileges to the database role.
      # Must be set to true for the gitlab to work properly.
      # type: boolean
      superuser: true

    # Authentication options.
    auth:
      # Root user password
      # type: string
      password: "Password1!"

      # LDAP group that the user must belong to. Does not affect the root user.
      # This group will be created automatically if it does not exist.
      # type: string
      group: "gitlab"

    # Storage options for git data (/var/opt/gitlab/git-data)
    storageGit:
      # Capacity to request.
      # type: string
      capacity: "100Gi"

      # Storage subdirectory
      # type: string
      dir: "gitlab/server/git"

    # Storage options for logs (/var/log/gitlab)
    storageLogs:
      # Capacity to request.
      # type: string
      capacity: "1Gi"

      # Storage subdirectory
      # type: string
      dir: "gitlab/server/logs"

    # Storage options for config (/etc/gitlab)
    storageConfig:
      # Capacity to request.
      # type: string
      capacity: "10Mi"

      # Storage subdirectory
      # type: string
      dir: "gitlab/server/config"

    # Storage options for shared data (/etc/gitlab/gitlab-rails/shared)
    storageShared:
      # Capacity to request.
      # type: string
      capacity: "10Gi"

      # Storage subdirectory
      # type: string
      dir: "gitlab/server/shared"

    # Storage options for build traces (/etc/gitlab/gitlab-ci/builds)
    storageBuilds:
      # Capacity to request.
      # type: string
      capacity: "1Gi"

      # Storage subdirectory
      # type: string
      dir: "gitlab/server/builds"

    # Storage options for ssh (/etc/gitlab/.ssh)
    storageSsh:
      # Capacity to request.
      # type: string
      capacity: "100Mi"

      # Storage subdirectory
      # type: string
      dir: "gitlab/server/ssh"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # The kubernetes service type for the SSH port.
    # type: string
    sshServiceType: "LoadBalancer"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional annotations to add to the service for the SSH port.
    # type: map
    # example: { "example.com/hello": "world" }
    sshServiceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}

    # Additional labels to add to the service for the SSH port.
    # type: map
    # example: { "example.com/hello": "world" }
    sshServiceLabels: {}
    
    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~
  redis:
    # Name of the component.
    # type: string
    name: "gitlab-redis"

    # Docker image for the redis cache.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/library/redis"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Password for connecting to the redis.
    # type: string
    password: "Password1!"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}

    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~
  cache:
    # Name of the component.
    # type: string
    name: "gitlab-cache"

    # Docker image for the cache.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/minio/minio"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # The user ID to run this cache at.
    # type: integer
    uid: 1000

    # The group ID to run this cache at.
    # type: integer
    gid: 1000

    # Access key, any random string
    # type: string
    accessKey: "someAccessKey"

    # Secret key, any random string
    # type: string
    secretKey: "Password1!"

    # Bucket options
    bucket:
      # Name of the bucket to use for the cache
      # type: string
      name: "gitlab-runner-cache"

    # Storage options.
    storage:
      # Capacity to request.
      # type: string
      capacity: "20Gi"

      # Storage subdirectory
      # type: string
      dir: "gitlab/cache"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}
    
    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~
  
  storage:
    # Name of the component.
    # type: string
    name: "gitlab-storage"

    # Docker image for the storage.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/minio/minio"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # The user ID to run this storage at.
    # type: integer
    uid: 1000

    # The group ID to run this storage at.
    # type: integer
    gid: 1000

    # Access key, any random string
    # type: string
    accessKey: "someAccessKey"

    # Secret key, any random string
    # type: string
    secretKey: "Password1!"

    # Buckets options
    buckets:
      # Name of the bucket to use for the registry
      # type: string
      registry: "gitlab-registry-storage"

      # Name of the bucket to use for the pages
      # type: string
      pages: "gitlab-pages-storage"

      # Name of the bucket to use for the terraform
      # type: string
      terraform: "gitlab-terraform-storage"

      # Name of the bucket to use for the dependency
      # type: string
      dependency: "gitlab-dependency-storage"

      # Name of the bucket to use for the diffs
      # type: string
      diffs: "gitlab-diffs-storage"

      # Name of the bucket to use for the lfs
      # type: string
      lfs: "gitlab-lfs-storage"

      # Name of the bucket to use for the artifacts
      # type: string
      artifacts: "gitlab-artifacts-storage"

      # Name of the bucket to use for the uploads
      # type: string
      uploads: "gitlab-uploads-storage"

      # Name of the bucket to use for the packages
      # type: string
      packages: "gitlab-packages-storage"

      # Name of the bucket to use for the backup
      # type: string
      backup: "gitlab-backup-storage"

    # Storage options.
    storage:
      # Capacity to request.
      # type: string
      capacity: "100Gi"

      # Storage subdirectory
      # type: string
      dir: "gitlab/storage"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}
    
    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~
  runner:
    # Name of the component.
    # type: string
    name: "gitlab-runner"

    # Docker image for the GitLab Pipelines Runner
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/gitlab/gitlab-runner"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    token: ""
    tags: "linux,amd64,kubernetes,docker"
    runUntagged: true
    concurrent: 1
    defaultImage: "ubuntu:22.04"
    jobNodeSelector: "kubernetes.io/arch:amd64"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}

    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~
  kroki:
    # Name of the component.
    # type: string
    name: "gitlab-kroki"

    # Docker image for the storage.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/yuzutech/kroki"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Subdomain at which to host the web GUI.
    # type: string
    subdomain: "kroki"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}
    
    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  krokiBlockdiag:
    # Name of the component.
    # type: string
    name: "gitlab-kroki-blockdiag"

    # Docker image for the storage.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/yuzutech/kroki-blockdiag"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}
    
    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  krokiBpmn:
    # Name of the component.
    # type: string
    name: "gitlab-kroki-bpmn"

    # Docker image for the storage.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/yuzutech/kroki-bpmn"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}
    
    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  krokiExcalidraw:
    # Name of the component.
    # type: string
    name: "gitlab-kroki-excalidraw"

    # Docker image for the storage.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/yuzutech/kroki-excalidraw"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}
    
    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~

  krokiMermaid:
    # Name of the component.
    # type: string
    name: "gitlab-kroki-mermaid"

    # Docker image for the storage.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/yuzutech/kroki-mermaid"

      # Image tag.
      # type: string
      tag: "latest"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "ClusterIP"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}
    
    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~
