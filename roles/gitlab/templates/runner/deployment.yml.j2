apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ gitlab.runner.name }}"
  namespace: "{{ common.namespace }}"
  labels:
    {{ service.extraLabels | to_nice_yaml | indent(4) }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      {{ service.selector | to_nice_yaml | indent(6) }}
  template:
    metadata:
      annotations:
        checksum/config: "{{ (runner_config_toml + runner_entrypoint_sh) | hash('md5') }}"
{% if gitlab.runner.podAnnotations %}
        {{ gitlab.runner.podAnnotations | to_nice_yaml | indent(8) }}
{% endif %}
      labels:
        {{ service.selector | to_nice_yaml | indent(8) }}
{% if gitlab.runner.podLabels %}
        {{ gitlab.runner.podLabels | to_nice_yaml | indent(8) }}
{% endif %}
    spec:
      serviceAccountName: "{{ gitlab.runner.name }}"
      securityContext:
        fsGroup: 65533
        runAsUser: 1000
        allowPrivilegeEscalation: false
{% if gitlab.runner.pullSecret is defined %}
      imagePullSecrets:
        - name: "{{ gitlab.runner.pullSecret }}"
{% endif %}
      containers:
        - name: "server"
          image: "{{ gitlab.runner.image.name }}:{{ gitlab.runner.image.tag }}"
          imagePullPolicy: "{{ gitlab.runner.image.pullPolicy }}"
          command:
            - '/bin/bash'
          args:
            - '/scripts/entrypoint.sh'
          env:
            - name: "KUBERNETES_NAMESPACE"
              value: "{{ common.namespace }}"
{% if gitlab.runner.env %}
            {{ gitlab.runner.env | to_nice_yaml | indent(12) }}
{% endif %}
          ports:
            - name: metrics
              containerPort: 9252
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: metrics
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            tcpSocket:
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            {{ gitlab.runner.resources | to_nice_yaml | indent(12) }}
          volumeMounts:
            - name: "config-volume"
              mountPath: "/scripts/entrypoint.sh"
              subPath: "entrypoint.sh"
              readOnly: true
            - name: "config-volume"
              mountPath: "/scripts/config.toml"
              subPath: "config.toml"
              readOnly: true
            - name: "data-volume"
              mountPath: "/etc/gitlab-runner"
      nodeSelector:
        {{ gitlab.runner.nodeSelector | to_nice_yaml | indent(8) }}
      volumes:
        - name: "config-volume"
          configMap:
            name: "{{ gitlab.runner.name }}"
            optional: false
            items:
              - key: "entrypoint.sh"
                path: "entrypoint.sh"
              - key: "config.toml"
                path: "config.toml"
        - name: "data-volume"
          emptyDir: {}
