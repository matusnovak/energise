apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ gitlab.server.name }}"
  namespace: "{{ common.namespace }}"
  labels:
    {{ service.extraLabels | to_nice_yaml | indent(4) }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      {{ service.selector | to_nice_yaml | indent(6) }}
  template:
    metadata:
      annotations:
        checksum/config: "{{ omnibus_conf | hash('md5') }}"
{% if gitlab.server.podAnnotations %}
        {{ gitlab.server.podAnnotations | to_nice_yaml | indent(8) }}
{% endif %}
      labels:
        {{ service.selector | to_nice_yaml | indent(8) }}
{% if gitlab.server.podLabels %}
        {{ gitlab.server.podLabels | to_nice_yaml | indent(8) }}
{% endif %}
    spec:
      serviceAccountName: "{{ gitlab.server.name }}"
      enableServiceLinks: false
      securityContext:
        allowPrivilegeEscalation: false
{% if openldap.server.pullSecret is defined %}
      imagePullSecrets:
        - name: "{{ openldap.server.pullSecret }}"
{% endif %}
      initContainers:
        {{ lookup('template', postgres_container_add_database_path, template_vars=dict(database=gitlab.server.database)) | indent(8) }}
        {{ lookup('template', openldap_container_add_group_path, template_vars=dict(ldap_group_name=gitlab.server.auth.group)) | indent(8) }}
      containers:
        - name: "server"
          image: "{{ gitlab.server.image.name }}:{{ gitlab.server.image.tag }}"
          imagePullPolicy: "{{ gitlab.server.image.pullPolicy }}"
          ports:
            - name: web
              containerPort: 80
              protocol: TCP
            - name: registry
              containerPort: 81
              protocol: TCP
            - name: pages
              containerPort: 82
              protocol: TCP
            - name: ssh
              containerPort: {{ gitlab.server.sshPort }}
              protocol: TCP
          env:
            - name: "GITLAB_OMNIBUS_CONFIG"
              valueFrom:
                configMapKeyRef:
                  name: "{{ gitlab.server.name }}"
                  key: "GITLAB_OMNIBUS_CONFIG"
{% if gitlab.server.env %}
            {{ gitlab.server.env | to_nice_yaml | indent(12) }}
{% endif %}
          livenessProbe:
            httpGet:
              path: /-/liveness
              port: web
            failureThreshold: 3
            initialDelaySeconds: 600
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /-/readiness
              port: web
            failureThreshold: 1
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            {{ gitlab.server.resources | to_nice_yaml | indent(12) }}
          volumeMounts:
            - name: "data-volume"
              mountPath: "/var/opt/gitlab"
            - name: "git-volume"
              mountPath: "/git-data"
            - name: "config-volume"
              mountPath: "/etc/gitlab"
            - name: "logs-volume"
              mountPath: "/var/log/gitlab"
            - name: "shared-volume"
              mountPath: "/shared"
            - name: "builds-volume"
              mountPath: "/builds"
            - name: "ssh-volume"
              mountPath: "/var/opt/gitlab/.ssh"
      nodeSelector:
        {{ gitlab.server.nodeSelector | to_nice_yaml | indent(8) }}
      volumes:
        - name: "data-volume"
          emptyDir: {}
        - name: "git-volume"
          persistentVolumeClaim:
            claimName: "{{ gitlab.server.name }}-git"
        - name: "config-volume"
          persistentVolumeClaim:
            claimName: "{{ gitlab.server.name }}-config"
        - name: "logs-volume"
          persistentVolumeClaim:
            claimName: "{{ gitlab.server.name }}-logs"
        - name: "shared-volume"
          persistentVolumeClaim:
            claimName: "{{ gitlab.server.name }}-shared"
        - name: "builds-volume"
          persistentVolumeClaim:
            claimName: "{{ gitlab.server.name }}-builds"
        - name: "ssh-volume"
          persistentVolumeClaim:
            claimName: "{{ gitlab.server.name }}-ssh"
