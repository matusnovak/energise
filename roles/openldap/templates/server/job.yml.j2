apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ openldap.server.name }}-job"
  namespace: "{{ common.namespace }}"
  labels:
    {{ service.extraLabels | to_nice_yaml | indent(4) }}
spec:
  ttlSecondsAfterFinished: 30
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 1
  backoffLimit: 1
  template:
    metadata:
      annotations:
        checksum/config: "{{ (job_sh + groups_ldif + users_ldif + posix_ldif) | hash('md5') }}"
    spec:
      initContainers:
        - name: init
          image: "{{ openldap.server.image.name }}:{{ openldap.server.image.tag }}"
          imagePullPolicy: "{{ openldap.server.image.pullPolicy }}"
          command:
            - '/bin/bash'
            - '-c'
            - 'until ldapsearch -x -H "ldap://$LDAP_HOST:389" -D "$LDAP_USER" -w "$LDAP_PASSWORD" -b "$LDAP_BASE" -o nettimeout=1; do echo "waiting for openldap"; sleep 2; done;'
          env:
            - name: LDAP_HOST
              value: "{{ openldap_server_url }}"
            - name: LDAP_USER
              value: "cn=admin,{{ common.domainComponent }}"
            - name: LDAP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ openldap.server.name }}"
                  key: password
                  optional: false
            - name: LDAP_BASE
              value: "{{ common.domainComponent }}"
      containers:
        - name: job
          image: "{{ openldap.server.image.name }}:{{ openldap.server.image.tag }}"
          imagePullPolicy: "{{ openldap.server.image.pullPolicy }}"
          command:
            - '/bin/bash'
            - '/scripts/job.sh'
          env:
            - name: LDAP_HOST
              value: "{{ openldap_server_url }}"
            - name: LDAP_USER
              value: "cn=admin,{{ common.domainComponent }}"
            - name: LDAP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ openldap.server.name }}"
                  key: password
                  optional: false
            - name: LDAP_BASE
              value: "{{ common.domainComponent }}"
          volumeMounts:
            - name: scripts-volume
              mountPath: "/scripts"
              readonly: true
      restartPolicy: Never
      volumes:
        - name: scripts-volume
          configMap:
            name: "{{ openldap.server.name }}"
            optional: false
            defaultMode: 0755
            items:
              - key: "job.sh"
                path: "job.sh"
              - key: "users.ldif"
                path: "users.ldif"
              - key: "groups.ldif"
                path: "groups.ldif"
              - key: "posix.ldif"
                path: "posix.ldif"
