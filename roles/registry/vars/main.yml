# experimental: true
registry:
  enabled: false

  server:
    # Name of the component.
    # type: string
    name: "registry-server"

    # Docker image for the registry server.
    image:
      # Image name without the tag.
      # type: string
      name: "docker.io/library/registry"

      # Image tag.
      # type: string
      tag: "2.8"

      # Image pull policy.
      # type: string
      pullPolicy: "IfNotPresent"

    # The user ID to run this registry at.
    # type: integer
    uid: 1000

    # The group ID to run this registry at.
    # type: integer
    gid: 1000

    # The registry HTTP API port.
    # type: integer
    port: 5443

    # Port for the HTTP traffic to the outside world.
    # type: integer
    exposedPort: 5443

    # Username for accessing the registry API.
    # type: string
    username: "registry"

    # Password for accessing the registry API.
    # type: string
    password: "Password1!"

    # Storage options for the certificates.
    storage:
      # Capacity to request.
      # type: string
      capacity: "10Gi"

      # Storage subdirectory
      # type: string
      dir: "registry/server"

    # Additional environment variables for the pod.
    # type: map
    # example: [{ "name": "MY_ENV_KEY", "value": "some_value" }]
    env: []

    # The kubernetes service type.
    # type: string
    serviceType: "LoadBalancer"

    # Additional annotations to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceAnnotations: {}

    # Additional labels to add to the service.
    # type: map
    # example: { "example.com/hello": "world" }
    serviceLabels: {}
    
    # Additional annotations to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podAnnotations: {}

    # Additional labels to add to the pod.
    # type: map
    # example: { "example.com/hello": "world" }
    podLabels: {}

    # Specify which node or nodes can be used to host this pod.
    # Leave as an empty map to allow the pod to be spawned anywhere.
    # type: map
    # example: { "kubernetes.io/arch": "amd64" }
    nodeSelector: {}

    # Optionally specify how much of each resource the pod will need.
    resources:
      # Maximum limits that the pod can not exceed.
      # Set to ~ or null to disable the resource limits.
      limits:
        # Maximum CPU that the pod can not exceed.
        # type: string
        # example: "1000m"
        cpu: ~
        # Maximum RAM that the pod can not exceed.
        # type: string
        # example: "1024Mi"
        memory: ~
      # Requested limits for scheduling the pod on nodes.
      # Set to ~ or null to disable the resource requests.
      requests:
        # The requested amount of CPU
        # type: string
        # example: "500m"
        cpu: ~
        # The requested amount of CPU
        # type: string
        # example: "512Mi"
        memory: ~
